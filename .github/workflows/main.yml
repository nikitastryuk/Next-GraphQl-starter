name: CI
on: push
jobs:
  test:
    name: Lint & typecheck
    runs-on: ubuntu-latest

    # Start a Postgres instance, which is used during tests
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: starter
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      # This needs to match the POSTGRES_* env variables set in the Postgres service above
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/starter

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Copy example env
        run: cp .env.example .env

      - name: Generate
        run: npm run generate

      - name: Migrate the CI database
        run: npm run prisma:migrate

      - name: Lint
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

      # - name: Tests (Jest)
      #   run: yarn test

      # - name: End-to-end tests (Cypress)
      #   uses: cypress-io/github-action@v2
      #   with:
      #     install-command: yarn --frozen-lockfile --silent
      #     build: yarn build
      #     start: yarn start:ci
      #     wait-on: http://localhost:3000
